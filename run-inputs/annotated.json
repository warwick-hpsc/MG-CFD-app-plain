{
    "compile": {
        "compiler comment": "Which compiler(s) to use. Supported are 'intel', 'gnu', 'clang', 'cray'. Single value or list.",
        "compiler": "intel",

        "cpp wrapper comment": "If target system requires use of a wrapper around compiler (eg Archer), state that here",
        "cpp wrapper": "",

        "insn set comment": "OPTIONAL. Instruction set(s) to target. Refer to Makefile for supported ISAs. Defaults to 'Host'. Single value or list.",
        "insn set": "Host",

        "base flags comment": "OPTIONAL. Compile-time options to enable for each run",
        "base flags": "OMP FLUX_FISSION SIMD DBLS_PER_SIMD=4",

        "permutable flags comment": "OPTIONAL. List of lists of compile-time options. gen_job.py iterates over the cartesian product of inner lists.",
        "permutable flags": [ ["", "FLAG_1"],
                              ["", "FLAG_2"] ],

        "flux flags comment": "OPTIONAL. List of compile-time options. gen_job.py iterates over their powerset.",
        "flux flags": [ "", "FLAG_1"],

        "compile only comment": "OPTIONAL. Request whether to just compile on the target system", 
        "compile only": true
    },

    "optimisation": {
        "simd mode comment": "OPTIONAL: Whether to vectorise loops (only if safe to do so). Single value or list.",
        "simd mode": [true, false],

        "simd CA scheme comment": "OPTIONAL: Specify conflict avoidance scheme for loops with indirect writes. Supported are 'colour' (based on graph colouring), 'manual' (force sequential indirect writes), or '' for none. Single value or list.",
        "simd CA scheme": "manual",

        "simd len comment": "Specify number of doubles to pack in vector. Single value or list.",
        "simd len": 4
    },

    "run": {
        "data dirpath comment": "Directory path to folder containing desired input files and input.dat",
        "data dirpath": "./dirpath/to/input/deck",

        "unit walltime comment": "Runtime of a single multigrid cycle of this dataset on a single core. Used to estimate job scheduling walltime.",
        "unit walltime": 1.0,

        "num threads comment": "Number of OpenMP threads. Single value or list.",
        "num threads": [4, 8], 

        "num repeats comment": "Number of runs at each distinct job configuration",
        "num repeats": 1,

        "mg cycles comment": "Number of multigrid cycles to perform.",
        "mg cycles": 10,

        "validate result comment": "Toggle whether to compare final grid state against a precomputed solution. If check fails, MG-CFD will exit with error.",
        "validate result": true
    },

    "setup": {
        "jobs dir comment": "Directory path to folder containing created jobs.",
        "jobs dir": "./dirpath/to/generated/jobs",

        "job scheduler comment": "Specify job scheduler. Supported are 'slurm', 'moab', 'lsf', 'pbs'. Alternatively, set as empty string '' for local execution.", 
        "job scheduler": "", 

        "batch header filepath comment": "OPTIONAL. Filepath to custom batch job script header, overriding bundled headers in run-templates/*",
        "batch header filepath": "",

        "partition comment": "Specify which job queue to target",
        "partition": "",

        "budget code comment": "Specify which project code to use",
        "budget code": "",

        "single batch comment": "OPTIONAL. Request whether to execute all MG-CFD runs in a single batch job",
        "single batch": false
    }
}
